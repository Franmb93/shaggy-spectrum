---
import { languages, getLangFromUrl } from '@i18n/ui';

const currentLang = getLangFromUrl(Astro.url);

function getRelativeUrl(targetLang: string) {
  const currentPath = Astro.url.pathname;
  
  if (currentPath === '/' || currentPath === '/en' || currentPath === '/en/') {
    return targetLang === 'es' ? '/' : '/en';
  }

  const pathSegments = currentPath.split('/').filter(segment => segment !== '');
  
  if (targetLang === 'es') {
    return '/' + pathSegments.filter(segment => segment !== 'en').join('/');
  } else {
    if (pathSegments[0] === 'en') {
      return currentPath;
    }
    return '/en' + currentPath;
  }
}

function isActiveLang(lang: string): boolean {
  if (lang === 'es') {
    return !Astro.url.pathname.startsWith('/en');
  }
  return Astro.url.pathname.startsWith('/en');
}
---

<div class="fixed top-4 right-4 z-50 flex gap-2">
  {Object.entries(languages).map(([lang, label]) => (
    <a
      href={getRelativeUrl(lang)}
      class={`px-3 py-1.5 rounded-lg text-sm font-medium transition-all duration-300 ${
        isActiveLang(lang)
          ? 'bg-gray-800 text-white dark:bg-white dark:text-gray-800 shadow-lg scale-105'
          : 'bg-gray-200 text-gray-600 hover:bg-gray-300 dark:bg-gray-700 dark:text-gray-300 dark:hover:bg-gray-600'
      } hover:scale-105 active:scale-95`}
      aria-label={`Cambiar idioma a ${label}`}
    >
      {lang.toUpperCase()}
    </a>
  ))}
</div>

<style>
  .scale-105 {
    transform: scale(1.05);
  }
  
  .scale-95 {
    transform: scale(0.95);
  }
  
  @media (max-width: 640px) {
    div {
      top: 1rem;
      right: 1rem;
    }
  }
</style>